swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all API endpoints of this project
  version: '2.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v2
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - in: header
          name: Authorization
          type: string
          description: Attach Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: header
          name: Authorization
          type: string
          description: Attach Bearer JWT token
          required: true
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/accounts:
    get:
      security:
        - Bearer: []
      tags:
        - Accounts Module
      summary: User accounts API
      description: API for fetching an user's accounts list
      parameters:
        - in: header
          name: Authorization
          type: string
          description: Attach Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: User accounts retrieved successfully
          schema:
            type: object
            properties:
              status:
                type: integer
              message:
                type: string
              body:
                type: array
                items:
                  $ref: '#/definitions/AccountModel'
        '400':
          description: Invalid Field
        '500':
          description: Internal Server Error
  /user/accounts/{accountId}:
    get:
      security:
        - Bearer: []
      tags:
        - Accounts Module
      summary: User accounts API
      description: API for fetching an user's specified account data
      parameters:
        - in: path
          name: accountId
          description: ID of the selected account
          required: true
          type: string
        - in: header
          name: Authorization
          type: string
          description: Attach Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: User account data retrieved successfully
          schema:
            type: object
            properties:
              status:
                type: integer
              message:
                type: string
              body:
                $ref: '#/definitions/AccountModel'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/accounts/{accountId}/transactions:
    get:
      security:
        - Bearer: []
      tags:
        - Accounts Module
      summary: User accounts API
      description: API for fetching all transactions (current year) or the ones of the specified month from an user's specified account
      parameters:
        - in: path
          name: accountId
          description: ID of the selected account
          required: true
          type: string
        - in: query
          name: month
          description: Integer of the specified month from 0 (January) to 11 (December) 
          required: false
          type: integer
        - in: header
          name: Authorization
          type: string
          description: Attach Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: Requested transactions retrieved successfully
          schema:
            type: object
            properties:
              status:
                type: integer
              message:
                type: string
              body:
                type: array
                items:
                  $ref: '#/definitions/TransactionModel'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/accounts/{accountId}/transactions/{transactionId}:
    get:
      security:
        - Bearer: []
      tags:
        - Accounts Module
      summary: User accounts API
      description: API for fetching a specified transaction from an user's specified account
      parameters:
        - in: path
          name: accountId
          description: ID of the selected account
          required: true
          type: string
        - in: path
          name: transactionId
          description: ID of the selected transaction
          required: true
          type: string
        - in: header
          name: Authorization
          type: string
          description: Attach Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: Requested transaction retrieved successfully
          schema:
            type: object
            properties:
              status:
                type: integer
              message:
                type: string
              body:
                $ref: '#/definitions/TransactionModel'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - Accounts Module
      summary: User accounts API
      description: API for updating the category and notes of the specified transaction
      parameters:
        - in: path
          name: accountId
          description: ID of the selected account
          required: true
          type: string
        - in: path
          name: transactionId
          description: ID of the selected transaction
          required: true
          type: string
        - in: header
          name: Authorization
          type: string
          description: Attach Bearer JWT token
          required: true
        - in: body
          name: body
          description: Payload to update the specified transaction
          required: true
          schema:
            $ref: '#/definitions/TransactionUpdater'
      produces:
        - application/json
      responses:
        '200':
          description: Specified transaction updated successfully
          schema:
            type: object
            properties:
              status:
                type: integer
              message:
                type: string
              body:
                $ref: '#/definitions/TransactionModel'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
          firstName:
            type: string
          lastName:
            type: string
          createdAt:
            type: string
          updatedAt:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
  AccountModel:
    type: object
    properties:
      id:
        type: string
      accountTitle:
        type: string
      amount:
        type: number
      amountDescription:
        type: string
      createdAt:
        type: string
      updatedAt:
        type: string
  TransactionModel:
    type: object
    properties:
      id:
       type: string
      transactionDate:
        type: string
      description:
        type: string
      amount:
        type: number
      balance:
        type: number
      transactionType:
        type: string
      category:
        type: string
      notes:
        type: string
  TransactionUpdater:
    type: object
    properties:
      category:
        type: string
      notes:
        type: string